// <auto-generated />
using System;
using FTSD2.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FTSD2.Migrations
{
    [DbContext(typeof(FTSDContext))]
    [Migration("20220522054317_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FTSD2.Domain.ActionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ActionTypes");
                });

            modelBuilder.Entity("FTSD2.Domain.ActiveContract", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int?>("BaasicDuration")
                        .HasColumnType("int");

                    b.Property<double?>("BasicPeriodValue")
                        .HasColumnType("float");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContractNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("CotractTotal")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDat")
                        .HasColumnType("datetime");

                    b.Property<double?>("LumpSum")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int?>("OptionalDuration")
                        .HasColumnType("int");

                    b.Property<double?>("OptionalPeriodValue")
                        .HasColumnType("float");

                    b.Property<double?>("OptionalValue")
                        .HasColumnType("float");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Uitrate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("RegionId");

                    b.ToTable("ActiveContract", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.AmedmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AmedmentTypes");
                });

            modelBuilder.Entity("FTSD2.Domain.AthorityMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.HasKey("Id");

                    b.ToTable("AthorityMatrix", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.BidsType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("BidsTypes");
                });

            modelBuilder.Entity("FTSD2.Domain.BudgetPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnualPlan")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<int?>("Spentbudget")
                        .HasColumnType("int");

                    b.Property<int?>("Yearbudget")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BudgetPlan", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.BudgetYear", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BudgetYears");
                });

            modelBuilder.Entity("FTSD2.Domain.BussinessUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("BussinessUnit", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.CapitalProject", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int?>("ActualPercentage")
                        .HasColumnType("int");

                    b.Property<string>("ArabicProjectName")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int?>("BudgetSpent")
                        .HasColumnType("int");

                    b.Property<Guid?>("BudgetYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BussinessUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractCost")
                        .HasColumnType("int");

                    b.Property<string>("ContractNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstimatBudget")
                        .HasColumnType("int");

                    b.Property<int?>("LandStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("PlanPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectDatesId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("ProjectNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProjectStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetYearId");

                    b.HasIndex("BussinessUnitId");

                    b.HasIndex("CityId");

                    b.HasIndex("LandStatusId");

                    b.HasIndex("ProjectStatusId");

                    b.HasIndex("ProjetTypeId");

                    b.HasIndex("RegionId");

                    b.ToTable("CapitalProjects");
                });

            modelBuilder.Entity("FTSD2.Domain.CapitalProjectAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NoteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectSatustsIdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("CapitalProjectAttachments");
                });

            modelBuilder.Entity("FTSD2.Domain.CapitalProjectNote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NoteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("CapitalProjectNotes");
                });

            modelBuilder.Entity("FTSD2.Domain.CapitalProjectsType", b =>
                {
                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.ToTable("CapitalProjectsTypes");
                });

            modelBuilder.Entity("FTSD2.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("FTSD2.Domain.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("NameArabic")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sapno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SAPNo");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("FTSD2.Domain.CompanyContact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mobile")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Name")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("NameArabic")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OtherTitle")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("CompanyContacts");
                });

            modelBuilder.Entity("FTSD2.Domain.ContractsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ContractsType", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.DucomentType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArabiceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DucomentTypes");
                });

            modelBuilder.Entity("FTSD2.Domain.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FTSD2.Domain.Ftsdrole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("FTSDRoles", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameArabic")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("FTSD2.Domain.LandStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LandStatus", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.Logo", b =>
                {
                    b.Property<double>("SiteNo")
                        .HasColumnType("float");

                    b.Property<bool>("ActiveSite")
                        .HasColumnType("bit")
                        .HasColumnName("Active_Site");

                    b.Property<byte[]>("Background")
                        .HasColumnType("image");

                    b.Property<byte[]>("Ebackground")
                        .HasColumnType("image")
                        .HasColumnName("EBackground");

                    b.Property<byte[]>("Elogo")
                        .HasColumnType("image");

                    b.Property<string>("Ename")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Logo1")
                        .HasColumnType("image")
                        .HasColumnName("logo");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SiteNo")
                        .HasName("PK__logos__65370702");

                    b.ToTable("logos", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.NewContract", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("ArabicContractName")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int?>("AthorityApproval")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AwardingApprovalDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BidEvaluationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime?>("ContractRequestDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractorDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("JobexDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("NewContractActionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenBidDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SigningDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("WavierDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AthorityApproval");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("NewContractActionId");

                    b.HasIndex("RegionId");

                    b.ToTable("NewContracts");
                });

            modelBuilder.Entity("FTSD2.Domain.NewContractAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.HasKey("Id");

                    b.ToTable("NewContractAction", (string)null);
                });

            modelBuilder.Entity("FTSD2.Domain.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NotificationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Receiver")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sender")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FTSD2.Domain.NotificationType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Criticality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameArabic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NotificationTypes");
                });

            modelBuilder.Entity("FTSD2.Domain.OperationalContractNote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActiveContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NoteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("OperationalContractNotes");
                });

            modelBuilder.Entity("FTSD2.Domain.OpertionalContractNote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DucomentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NoteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OperationalContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DucomentTypeId");

                    b.HasIndex("OperationalContractId");

                    b.HasIndex("UserId");

                    b.ToTable("OpertionalContractNotes");
                });

            modelBuilder.Entity("FTSD2.Domain.ProjectDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AwardingDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("BiddingDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Closing")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("date")
                        .HasColumnName("completionDate");

                    b.Property<DateTime?>("DesigningDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("PlannigDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("RecevReq")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("ProjectDates");
                });

            modelBuilder.Entity("FTSD2.Domain.ProjectSatuse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ProjectSatuses");
                });

            modelBuilder.Entity("FTSD2.Domain.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");
                });

            modelBuilder.Entity("FTSD2.Domain.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("NoDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("FTSD2.Domain.ActiveContract", b =>
                {
                    b.HasOne("FTSD2.Domain.Company", "Company")
                        .WithMany("ActiveContracts")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_ActiveContract_Companies");

                    b.HasOne("FTSD2.Domain.ContractsType", "ContractType")
                        .WithMany("ActiveContracts")
                        .HasForeignKey("ContractTypeId")
                        .HasConstraintName("FK_ActiveContract_ContractsType");

                    b.HasOne("FTSD2.Domain.Region", "Region")
                        .WithMany("ActiveContracts")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_ActiveContract_Regions");

                    b.Navigation("Company");

                    b.Navigation("ContractType");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("FTSD2.Domain.CapitalProject", b =>
                {
                    b.HasOne("FTSD2.Domain.BudgetYear", "BudgetYear")
                        .WithMany("CapitalProjects")
                        .HasForeignKey("BudgetYearId")
                        .HasConstraintName("FK_CapitalProject_BudgetYears");

                    b.HasOne("FTSD2.Domain.BussinessUnit", "BussinessUnit")
                        .WithMany("CapitalProjects")
                        .HasForeignKey("BussinessUnitId")
                        .HasConstraintName("FK_CapitalProject_BussinessUnit");

                    b.HasOne("FTSD2.Domain.City", "City")
                        .WithMany("CapitalProjects")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_CapitalProject_Cities");

                    b.HasOne("FTSD2.Domain.LandStatus", "LandStatus")
                        .WithMany("CapitalProjects")
                        .HasForeignKey("LandStatusId")
                        .HasConstraintName("FK_CapitalProject_landStatus");

                    b.HasOne("FTSD2.Domain.ProjectSatuse", "ProjectStatus")
                        .WithMany("CapitalProjects")
                        .HasForeignKey("ProjectStatusId")
                        .HasConstraintName("FK_CapitalProjects_ProjectSatuses");

                    b.HasOne("FTSD2.Domain.ProjectType", "ProjetType")
                        .WithMany("CapitalProjects")
                        .HasForeignKey("ProjetTypeId")
                        .HasConstraintName("FK_CapitalProjects_ProjectTypes");

                    b.HasOne("FTSD2.Domain.Region", "Region")
                        .WithMany("CapitalProjects")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_CapitalProjects_Regions");

                    b.Navigation("BudgetYear");

                    b.Navigation("BussinessUnit");

                    b.Navigation("City");

                    b.Navigation("LandStatus");

                    b.Navigation("ProjectStatus");

                    b.Navigation("ProjetType");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("FTSD2.Domain.CompanyContact", b =>
                {
                    b.HasOne("FTSD2.Domain.JobTitle", "JobTitle")
                        .WithMany("CompanyContacts")
                        .HasForeignKey("JobTitleId")
                        .HasConstraintName("FK_CompanyContacts_CompanyContacts");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("FTSD2.Domain.Employee", b =>
                {
                    b.HasOne("FTSD2.Domain.JobTitle", "JobTitle")
                        .WithMany("Employees")
                        .HasForeignKey("JobTitleId")
                        .HasConstraintName("FK_Employees_Employees");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("FTSD2.Domain.NewContract", b =>
                {
                    b.HasOne("FTSD2.Domain.AthorityMatrix", "AthorityApprovalNavigation")
                        .WithMany("NewContracts")
                        .HasForeignKey("AthorityApproval")
                        .HasConstraintName("FK_NewContracts_AthorityMatrix");

                    b.HasOne("FTSD2.Domain.Company", "Company")
                        .WithMany("NewContracts")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_NewContracts_Companies");

                    b.HasOne("FTSD2.Domain.ContractsType", "ContractType")
                        .WithMany("NewContracts")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_NewContracts_ContractsType");

                    b.HasOne("FTSD2.Domain.NewContractAction", "NewContractAction")
                        .WithMany("NewContracts")
                        .HasForeignKey("NewContractActionId")
                        .HasConstraintName("FK_NewContracts_NewContractAction");

                    b.HasOne("FTSD2.Domain.Region", "Region")
                        .WithMany("NewContracts")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_NewContracts_Regions");

                    b.Navigation("AthorityApprovalNavigation");

                    b.Navigation("Company");

                    b.Navigation("ContractType");

                    b.Navigation("NewContractAction");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("FTSD2.Domain.Notification", b =>
                {
                    b.HasOne("FTSD2.Domain.NotificationType", "NotificationType")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTypeId")
                        .HasConstraintName("FK_Notifications_NotificationTypes");

                    b.Navigation("NotificationType");
                });

            modelBuilder.Entity("FTSD2.Domain.OpertionalContractNote", b =>
                {
                    b.HasOne("FTSD2.Domain.DucomentType", "DucomentType")
                        .WithMany("OpertionalContractNotes")
                        .HasForeignKey("DucomentTypeId")
                        .HasConstraintName("FK_OpertionalContractNotes_DucomentTypes");

                    b.HasOne("FTSD2.Domain.ActiveContract", "OperationalContract")
                        .WithMany("OpertionalContractNotes")
                        .HasForeignKey("OperationalContractId")
                        .IsRequired()
                        .HasConstraintName("FK_OpertionalContractNotes_ActiveContract");

                    b.HasOne("FTSD2.Domain.NewContract", "OperationalContractNavigation")
                        .WithMany("OpertionalContractNotes")
                        .HasForeignKey("OperationalContractId")
                        .IsRequired()
                        .HasConstraintName("FK_OpertionalContractNotes_NewContracts");

                    b.HasOne("FTSD2.Domain.Employee", "User")
                        .WithMany("OpertionalContractNotes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_OpertionalContractNotes_Employees");

                    b.Navigation("DucomentType");

                    b.Navigation("OperationalContract");

                    b.Navigation("OperationalContractNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSD2.Domain.ActiveContract", b =>
                {
                    b.Navigation("OpertionalContractNotes");
                });

            modelBuilder.Entity("FTSD2.Domain.AthorityMatrix", b =>
                {
                    b.Navigation("NewContracts");
                });

            modelBuilder.Entity("FTSD2.Domain.BudgetYear", b =>
                {
                    b.Navigation("CapitalProjects");
                });

            modelBuilder.Entity("FTSD2.Domain.BussinessUnit", b =>
                {
                    b.Navigation("CapitalProjects");
                });

            modelBuilder.Entity("FTSD2.Domain.City", b =>
                {
                    b.Navigation("CapitalProjects");
                });

            modelBuilder.Entity("FTSD2.Domain.Company", b =>
                {
                    b.Navigation("ActiveContracts");

                    b.Navigation("NewContracts");
                });

            modelBuilder.Entity("FTSD2.Domain.ContractsType", b =>
                {
                    b.Navigation("ActiveContracts");

                    b.Navigation("NewContracts");
                });

            modelBuilder.Entity("FTSD2.Domain.DucomentType", b =>
                {
                    b.Navigation("OpertionalContractNotes");
                });

            modelBuilder.Entity("FTSD2.Domain.Employee", b =>
                {
                    b.Navigation("OpertionalContractNotes");
                });

            modelBuilder.Entity("FTSD2.Domain.JobTitle", b =>
                {
                    b.Navigation("CompanyContacts");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FTSD2.Domain.LandStatus", b =>
                {
                    b.Navigation("CapitalProjects");
                });

            modelBuilder.Entity("FTSD2.Domain.NewContract", b =>
                {
                    b.Navigation("OpertionalContractNotes");
                });

            modelBuilder.Entity("FTSD2.Domain.NewContractAction", b =>
                {
                    b.Navigation("NewContracts");
                });

            modelBuilder.Entity("FTSD2.Domain.NotificationType", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("FTSD2.Domain.ProjectSatuse", b =>
                {
                    b.Navigation("CapitalProjects");
                });

            modelBuilder.Entity("FTSD2.Domain.ProjectType", b =>
                {
                    b.Navigation("CapitalProjects");
                });

            modelBuilder.Entity("FTSD2.Domain.Region", b =>
                {
                    b.Navigation("ActiveContracts");

                    b.Navigation("CapitalProjects");

                    b.Navigation("NewContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
